'use strict';

import React, { useState} from 'react';

export const MFA = ({secretCode, username, issuer, api, dispatch, queryParams}) => {

    const [showQr, setShowQr] = useState(false);
    const [showMobile, setShowMobile] = useState(true);
    const [showBrowser, setShowBrowser] = useState(false);

    const qrPrefix = `otpauth://totp/${issuer.replace(/(^\w+:|^)\/\//, '')}:${username}?secret=`;

    const handleSubmit = async() => {
        // const { api, dispatch, queryParams } = this.props;
        const { inflight, tokens } = api;
        const { code } = queryParams;
        if (tokens.token!== null && document.getElementById('totp')?.value !== '') {
          dispatch(verify(document.getElementById('totp').value, tokens.token)).then(value => {
            const resp = value;
            let error = resp?.data?.error || resp?.error || resp?.data?.[0]?.error || resp?.message
            if (error && !config.environment.match(/LOCALHOST/g)) {
              console.log(`An error has occurred: ${error}.`);
            } else {
              deleteToken();
              saveToken({ token: tokens.token, user: tokens.user });
              this.setState({ body: ''});
              if (!inflight && code) {
                window.location.href = config.basepath;
              } 
            }
          })
        } 
      }

    return (
        <div style={{ textAlign: "left" }}>
          <div className="eui-info-box">
            <h2>Welcome to Earthdata Pub</h2>
            <p>
              Earthdata Pub uses Multifactor Authentication (MFA). MFA is a security
              system that requires users to provide two or more verification factors
              to gain access to an account or system. These factors typically
              include something you know (like a password) and something you have
              (like a smartphone or security token). MFA is important because it
              adds an extra layer of protection, significantly reducing the risk of
              unauthorized access even if one factor, such as a password, is
              compromised.
            </p>
            <p style={{ marginTop: "1rem" }}>
              To access your account with MFA, you'll need to enter a Time-Based
              One-Time Password (TOTP) each time you log in. The TOTP is a short,
              temporary code generated by an authentication app, such as Google
              Authenticator, Authy, Microsoft Authenticator, or Duo. These apps work
              best with a smartphone, but some can work with an internet browser.{" "}
              <div style={{ textDecoration: "underline", display: "inline" }}>
                After this initial setup, you will be prompted to enter the
                temporary code each time you login to the Earthdata Pub Dashboard.
              </div>
            </p>
          </div>
          <div style={{ display: showMobile ? 'contents' : 'none' }}>
            <h2>Steps to Set Up MFA on a Smartphone</h2>
            <ol style={{ listStyleType: "decimal", paddingLeft: "2.5em" }}>
              <li>
                <div className="inline-title">
                  Download an Authentication App:
                </div>{" "}
                Install any TOTP-compatible app on your mobile device, such as
                Google Authenticator, Authy, Microsoft Authenticator, or Duo.
              </li>
              <li>
                <div className="inline-title">
                  Open the Authentication App and Use It to Scan the QR Code:
                </div>{" "}
                <button onClick={() => setShowQr(true)}>
                  CLICK HERE FOR THE QR CODE.
                </button>{" "}
                If you can't scan the QR code, manually enter the following
                alphanumeric code into your app: {secretCode} Depending on the app
                you choose, there may be additional steps.
              </li>
              <li>
                <div className="inline-title">
                  Get Your Code:
                </div>{" "}
                After scanning the QR code or entering the setup code, your
                authenticator app will generate a one-time password (a 6-digit
                code).
              </li>
              <li>
                <div className="inline-title">
                  Enter the Code:
                </div>{" "}
                Type the one-time password from your app into the field below and
                click "Submit."
              </li>
              <li>
                <a
                  href="javascript:feedback.showForm();"
                  title="Send feedback using feedback form."
                >
                  Contact us
                </a>{" "}
                if your encounter any problems.
              </li>
            </ol>
            <h3>
              (Using a Smartphone is recommended. Click{" "}
              <button
                onClick={() => {
                    setShowMobile(false);
                    setShowBrowser(true);
                    setShowQr(false);
                }}
              >
                here
              </button>{" "}
              for instructions for setting up a browser-based authenticator.)
            </h3>
          </div>
          <div style={{ display: showBrowser ? "contents" : "none" }}>
            <h2>Method 2: Steps to Set Up a Browser-Based Authentication App:</h2>
            <p>
              An internet search should reveal options for a browser-based or web
              extension authentication app.
            </p>
            <ol style={{ listStyleType: "decimal", paddingLeft: "2.5em" }}>
              <li>
                <div className="inline-title">
                  Install the App:
                </div>{" "}
                Download and install the browser-based authentication app or add a
                trusted authentication extension to your browser.
              </li>
              <li>
                <div className="inline-title">
                  Open the App:
                </div>{" "}
                Launch the authentication app in your browser or on your computer.
              </li>
              <li>
                <div className="inline-title">
                  Add a New Account:
                </div>{" "}
                In the authentication app, look for an option like "Add Account"
                or "Set Up."
              </li>
              <li>
                <div className="inline-title">
                  Enter the Setup Code:
                </div>{" "}
                <ul>
                  <li>Manually enter the setup code: {secretCode}</li>
                  <li>
                    <div className="inline-title">
                      Get Your Authentication Code:
                    </div>{" "}
                    Once the account is added, the app will generate a time-based
                    one-time password (TOTP), usually a 6-digit code that updates
                    every 30 seconds.
                  </li>
                </ul>
              </li>
              <li>
                <div className="inline-title">
                  Enter the Code:
                </div>{" "}
                Enter the 6-digit code from the app here.
                <input
                  type="text"
                  name="totp"
                  id="totp"
                  autoFocus="autofocus"
                  className="default"
                  style={{ width: "20%" }}
                />
                <button
                  className={
                    "button button--submit button__animation--md button__arrow button__arrow--md button__animation button__arrow--white"
                  }
                  aria-label="submit your user"
                  data-disable-with="TOTP"
                  onClick={handleSubmit}
                >
                  Submit
                </button>
              </li>
              <li>
                <a
                  href="javascript:feedback.showForm();"
                  title="Send feedback using feedback form."
                >
                  Contact us
                </a>{" "}
                if your encounter any problems.
              </li>
            </ol>
            <h3>
              (Using a Smartphone is recommended. Click{" "}
              <button
                onClick={() => {
                    setShowMobile(false);
                    setShowBrowser(true);
                    setShowQr(false);
                }}
              >
                here
              </button>{" "}
              for instructions for setting up a mobile-based authenticator.)
            </h3>
          </div>
          <div>
            <div
              style={{
                height: "auto",
                margin: "0 auto",
                maxWidth: 150,
                width: "100%",
                display: showQr ? 'contents' : 'none'
              }}
            >
              <QRCode
                size={500}
                style={{
                  height: "auto",
                  maxWidth: "100%",
                  width: "100%",
                  marginTop: "2rem",
                }}
                value={`${qrPrefix}${secretCode}`}
                viewBox={"0 0 500 500"}
              />
            </div>
            <div style={{ display: showMobile ? 'contents' : 'none' }}>
              <p>
                <label htmlFor="totp">
                  Enter Authentication Code from Verification App{" "}
                </label>
                <br />
                <input
                  type="text"
                  name="totp"
                  id="totp"
                  autoFocus="autofocus"
                  className="default"
                  style={{ width: "20%" }}
                />
              </p>
              <p style={{ marginTop: "1rem" }}>
                <button
                  className={
                    "button button--submit button__animation--md button__arrow button__arrow--md button__animation button__arrow--white"
                  }
                  aria-label="submit your user"
                  data-disable-with="TOTP"
                  onClick={handleSubmit}
                >
                  Submit
                </button>
              </p>
            </div>
          </div>
        </div>
      );
};